#!/bin/bash

source DayZLauncherUtil

useExperimental=false
mods=()

verbosity=0

##
# @return formatted mod arg (i.e. --mods=A;B;C;D)
function getFormattedModsArgs() {
	local modsArg=""
	for mod in "${mods[@]}"; do
		[[ -z "$modsArg" ]] && modsArg="-mod=$mod" || modsArg="$modsArg;$mod"
	done
	printf "%s" "$modsArg"
}

options=(
	"h,help                ?Print this page and exit"
	"v,verbose             ?Be verbose. Can be repeated for more verbosity"
	"m,mods:mods           ?Loads the specified sub-folders for different mods.
	                           Separated by semi-colons.
	                           Absolute path and multiple stacked folders are possible. "
	"script-define:define  ?Specify to load a script preprocessor define.
	                           Can be repeated to define more"
	"experimental          ?Use experimental version of the workbench"
)
_options=$(declare -p options)

function printUsage() {
	mangen \
		--name "${0##*/}" \
		--options "$_options" \
		--command-width 35 \
		--description-width 80 \
		--new-line-indent 4
}

function parseArgs() {
	local parsedArgs
	parsedArgs=$(getopt -n "${0##*/}" -o "$(mangen -so "$_options")" --long "$(mangen -lo "$_options")" -- "$@")
	[[ "$?" != "0" ]] && exit 1
	eval set -- "$parsedArgs"

	while true; do
		case $1 in
			-h | --help) printUsage; exit 1 ;;
			-v | --verbose) ((verbosity++)) ;;
			-m | --mods) mods+=("$2"); shift ;;
			--experimental) useExperimental=true ;;
			--)
				shift
				break
				;;
			*)
				echo "Invalid option: $1"
				exit 1
				;;
			esac
		shift #go to next arg
	done
}
###############################################################################

parseArgs "$@"

[[ "$useExperimental" == true ]] \
	&& workbenchExe=$(queryCfg "/config/tools/experimental/workbench/text()") \
	|| workbenchExe=$(queryCfg "/config/tools/stable/workbench/text()")

[[ $verbosity -ge 2 ]] && echo "cmd.exe" "/c" "START" "/D" "${workbenchExe%\\*}" ".\\${workbenchExe##*\\}" "$(getFormattedModsArgs)"
cmd.exe /c "START" "/D" "${workbenchExe%\\*}" ".\\${workbenchExe##*\\}" "$(getFormattedModsArgs)"
